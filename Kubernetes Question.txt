----------------------------
    KUBERNETES QUESTIONS
----------------------------

Q-01 What is Kubernetes?

     - Kubernetes is a container orchestration tool that used for managing, monitoring, scaling and
       deploying containerized application.
     - It has features like 
         high availability means zero down time
         scalability
         self healing
         AutoScaling
         load balancing
         Automated Rollouts and Rollbacks
         Secret and configuration Management
         Storage orchestration
     - kubernetes is an opensource orchestration tool that was developed by google for managing microservices or 
       containerized application across a distributed cluster of nodes

Q-02 Explain Kubernetes Architecture  

     - Kubernetes works on Master Worker Architecture
       Master has components like 
         Kubernetes api-server 
         Control manager
         etcd
         Scheduler 
         cloud controller manager
       and Worker has components like 
         container run time 
         kubelet
         kubeproxy

Q-03 What is Kubernetes api-server

      - the api (application program "interface" ) server determines if request is valid and
        then process it. 
        The api is also the interface that used to manage, create, and configure kubernetes cluster. 
        It's how the users, external components, and parts of your cluster all communicate
        with each other.

      - kubernetes api server is a master node component by which users, external components,
        and all parts of your cluster is able to communicates with each other.

Q-04 What is kube-controller-manager in kubernetes

      - The kubernetes controller manager is a demon that embades the core control loops
        shipped with kubernetes. In kubernetes the controller is a conntrol loops that watches 
        the shared state of the cluster through the apiserver and makes changes attempting to 
        move the current state towords the desired state.
 
      - controller manager is a daemon used for garbage collection , core control loops and namespaces
        it enables the running of more than one process on master node

      - controller manager manages controllers like 
          - node controllers
          - replication controllers 
          - replicasets 
          - endpoint controller
          - service account and token Controller etc.

Q-05 What is etcd in kubernetes

      - etcd stores all cluster's data in distributed key-value form 
        it stores like 
            which pod is running on which node
            how many pods and nods are active and running
            how much resources available in every node

Q-06 What is scheduler in kubernetes

      - The Kubernetes scheduler is a control plane process which assigns Pods to Nodes.
        The scheduler determines which Nodes are valid placements for each Pod
          #scheduler checks etcd before assigning pod to the node

Q-07 What is container run-time in kubernetes
      - A container runtime, also known as container engine, 
        is a software component that can run containers on a host operating system.
      
      - Kubernetes does not actually handle the process of running containers on a machine.
        Instead, it relies on another piece of software called a container runtime

      - A container runtime is a software designed for the purpose of running containers. 
        To enable pods to run inside nodes, you need to install a container runtime. 

      - to run and manage a container lifecycle we need a container run time on a worker node

Q-08 What is kubelet

      - The kubelet is the primary "node agent" that runs on each node.
        Kubelet is the technology that applies, updates, 
        and destroys containers on a Kubernetes node.

      - The kubelet takes a set of PodSpecs that are provided through various mechanisms and 
        ensures that the containers described in those PodSpecs are running and healthy. 
        The kubelet doesn't manage containers which were not created by Kubernetes.

      - kubelet is a service agent which controles and maintains group of pods by checking pod 
        specification using kubernetes,
        the kubelet runs on each node it allows to communicate between master node and slave nodes

Q-09 What is kubeproxy
      - kube-proxy is a network proxy that runs on each node in your cluster
        kube-proxy maintains network rules on nodes.
        These network rules allow network communication to
        your Pods from network sessions inside or outside of your cluster.

Q-10 what is pod in kubernetes
      - pod is abstraction layer of container 
        pod are the smallest, most basic deployable objects in kubernetes
        Pods contain one or more containers, such as Docker containers.

q-11 what is Replication Controller in kubernetes
      - replication controller is a one kind of kubernetes resource,
        it ensures that a specified number of pod replicas are running as desired state 
        it uses equallity based selector 
      - 

q-11 what is ReplicaSet in kubernetes
      - replicaSet is a one kind of kubernetes resource, 
        replicaset is updated version of replication controller
        that maintains desired state of pod replicas
        it uses both equallity and set based selectors

q-11 what is Deployment in kubernetes
      - deployment is one kind of kubernetes resources
        that maintains replicaset keeps running 

      - 

q-12 What is Secrets in kubernetes
     - A secret is a kubernetes resource that stores confidintial data like user id and passwords 
       it stores data in key value form, in encripted

q 13 What is Services in kubernetes
     - An abstract way to expose an application running on a set of Pods as a network service.
  	   type of services :
        	1 ) Cluster IP
        	2 ) NodePort
        	3 ) Load Balancer
         	4 ) Head Less Service

Q-14 What is ConfigMaps in kubernetes
     - A ConfigMap is an API object used to store non-confidential data in key-value pairs. 
       Pods can consume ConfigMaps as environment variables, command-line arguments, 
       or as configuration files in a volume. 

Q-15 What is Service Accounts in kubernetes
     - A service account provides an identity for processes that run in a Pod.
     - 

Q-16 What is Persistant Volume
     - A persistent volume is a storage unit that is controlled by the administrator. 
       It is used to manage an individual pod in a cluster. 
     - 

Q-17 What is Persistant Volume Claims

     - The full form of PVC stands for Persistent Volume Claim. It is storage requested by Kubernetes for pods.
       The user does not require to know the underlying provisioning. This claim should be created in 
       the same namespace where the pod is created.
     - A PersistentVolumeClaim (PVC) is a request for storage by a user. It is similar to a Pod. 
       Pods consume node resources and PVCs consume PV ..

Q-18 What is Statefull Set

     - The stateful set is a workload API object that is used to manage the stateful application. It can also 
       be used to manage the deployments and scaling the sets of pods. The state information and 
       other data of stateful pods are store in the disk storage, which connects with stateful set.

Q-19 what is ingress controller 

     - kubernetes ingress is an api object that provides routing rules to manage external users' 
       access to the services in the kubernetes cluster, tipically via https and http ,
       with you can easyly setup rules for routing traffic without creating a bunch of load balancer or 
       exposing each service on the Nodes  
     - 

Q-20 what is helm charts
     - Helm chart is a collection of all your versioned, 
       pre-configured application resources which can be deployed as one unit.

     - Kubernetes Helm is a package manager for Kubernetes
       It makes it possible to organize Kubernetes objects in a packaged application that anyone can download and
       install in one click, or configure to their specific needs. In Helm, 
       these packages are called charts (similar to debs or rpms). 

     - the helm chart is a collection of kubernetes yaml files
       of kubernetes resources 
      

Q-21 What is NameSpace in kubernetes
     - in kubernetes namespaces we divide single cluster into multiple virtual clusters
     - kubernetes namespace allows different teams, projects, or customers to share a same
       kubernetes cluster
     - namespace also allows cluster's workloads to organise them
     
Q-22 What is Labels
     - Labels are key/value pairs that are attached to objects, such as pods.
       labels are essential tools for querying filtering and searching kubernetes objects

Q-23 What is Selector
     - Via a label selector, the client/user can identify a set of objects. 
       The label selector is the core grouping primitive in Kubernetes.

Q-24 What are the types of selectors
     - there are two types of selectors
        - equality based selector
        - set based selector

Q-25 What is meaning of equallity based selector 
     - this allows filtering by key and value, where matching objects shoulld setisfy all the specified labels
       
Q-26 What is meaning of set based selector
     - this allow filtering keys accourding to set of values
      
Q-27 What is meaning of cluster
     - cluster is a combination of multiple nodes, where nodes are physical or virtual machines or on cloud

Q-28 What is kubectl
     - kubectl is a command line tool by which we can interect with kubernetes cluster 
       by kubectl we can interect to all kind off clusters like cloud based or baremetal

Q-29 What is meaning of Multitire Architecture
     - multitire architecture means to divide single large application into multiple small applications/layers
       which is called microservices

Q-30 What is environment variables
     - environment variables is a key-value pair which is entrypoint to run our containerized application 
       example mysql database require atleast database root password to run it's container

Q-31 what are the types of volumes 
     - there are two types of volumes 
       - efimaral volume 
       - persistant volume

Q-32 what are the Different types of Services
     - there are basic three types of services 
       - ClusterIP
       - NodePort
       - Loadbalancer
     - and other is headless service

Q-33 what is ClusterIP Service
     - clusterip is a default service in kubernetes 
       by clusterip our application can only accessible within the cluster
       application can not be accessible from outside the cluster

Q-34 what is NodePort Service
     - nodeport is a service which allows us to access application via external port of a node
      
Q-35 what is Load balancer Service
     - a load balancer is a service which allows us to attach external load balancer to our cluster
     ()
     - expose the service externally using a cloud providers load balancer

#Q-36 What is head less services

Q-37 What is difference between configMaps and Secrets
     - configMap used to inject configuration file in to pod it stores data in plain text fromet
     - secrect stores sensitive data in encrypected key value pairs 

Q-38 What is meaning of rolling Updates
     - Rolling updates allow Deployments' update to take place with zero 
       downtime by incrementally updating Pods instances with new ones

Q-39 What are the different storage access modes in PV/PVC
     - Read Only Many
     - Read Write Once
     - Read Write Many

Q-40 What is meaning of static storage and dynamic storage
Q-41 what is reclaim policy in Persistant volumes / types of reclaim policies

     - reclaim policy for persistant volume tells the cluster what to do with volume after it's has 
       been released of it's claim

     - there are three types of reclaim policies 
        1. retained
        2. recycled
        3. deleled

Q-42 How to deploy pod in k8s

     - we can deploy pod using two methods 
       - first using kubernetes cli and ( kubectl run <pod-name> --image=<image-name> ) 
       - second using kubernetes menifast file ( kubectl apply -f <pod-menifastFile.yaml> )

Q-43 How to launch a Deployment

     - we can deploy pod using two methods 
       first using kubernetes cli and (kubectl create deployment <dep-name> --image=<image> <other options> ) 
       second using kubernetes menifast file (kubectl apply -f <dep-yaml-file>)

Q-44 How to see how many pods are running in k8s
     - by using "kubectl get pods command"

Q-45 how to check pod's Ip address
     - by using "kubectl describe pod <pod name>" or by "kubect get pod -o wide"

Q-46 how to check which pod is running on which node
     - by using "kubectl get pods -o wide
                "kubectl get pod <pod name> -o wide

Q-47 What is kind in k8s yaml file ( kubernetes menifastation file)
     - by assigning kind in k8s 
     - by kind we can determine what kind of kubernetes resource you want to create

Q-48 How to expose any resources
     - we can expose by below command
       #kubectl expose <resource> <resource-name> --port=<port> --type=<type-of-service>
       #kubectl expose deployment myd --port=80 --type=NodePort 
     
Q-49 how to remove labels from pod
     - we can remove label using below command
       #kubectl label <resources> <resource-name> <label-name> -
       #kubectl label pod web1 <label-key> -

Q-50 how to change label of pod
     - first remove label from any pod
       and after that attach label to any pod

Q-51 how to scale (up/down) deployment, pod, replicaset, replication Controller
     - we can scale by using two method
       1. using cli below is example
          #kubectl scale deployment myd replicas=5
       2. we can change in resurces.spec.replicas in yaml file

Q-52 how to see more details about resources  ( describe )
     - we can see more details about resource using below command
       #kubectl describe <resource> <resource-name>
       #kubectl describe pod <web>

Q-53 how to roll back to previous version 
     - using "kubectl rollout undo" command
     
Q-54 what are different types of authorization methods we uses
     - there three types of authorization methods
       1. Id and password based authorization
       2. key based authorization
       3. certificate based authorization

Q-55 which preferd authorization method used in kubernetes
     - in kubernetes we uses certificate base authorization

Q-56 What is CSR certificate signing request
     - csr is a request that is generated by user to get access on any server
       csr signed by server host and sent back to user as a crt form

Q-57 how to assign different resources and permission to user in kubernetes cluster
     - first from user side generate csr request after that sign that request from server(master) side
       generate role on master in that role define different resources and permissions
       after that bind that role to the user  
       
Q-58 what is Node in kubernetes
     - in kubernetes node is a 
    
Q-59 what is cloud controll manager
     - You can use the cloud controller manager to link a kubernetes cluster to the api of cloud provider

Q-60 How do I assign pod to a specific node
     - we can use nodeSelector in pod's configuration yaml file to assign pod to a specific node

Q-61 what is nodeSelector
        node Isoletion/restriction
          - node isolation/restriction is a technique to isolate specific node 
            or group of nodes from cluster in which specific pods runs with 
            isoleted, secured environment.
          - 
            
Q-62 affinity and antiaffinity

     - affinity allows the allocation of pods on nodes
     - while anti-affinity releases the pod that are running on the node based on the constraints 

Q-63 What is node affinity 
     
     - Node affinity is a set of rules used by scheduler to determine where a pod can be scheduled to it
       
Q-64 what is taint and toleration

     - this kubernetes featur allows users to mark a node so that no pod can be scheduled to it
       unless a pod explicitly tolerates the taint
     - when you taint node , it is automatically excluded frm pod scheduling 
     - a taint can produce three possible effects:
     - NoSchedule - the kubernetes scheduler will only allow scheduling pod that hav tolaration for the tained nodes
     - PreFerSchedule - The kubernetes scheduler will only allow scheduling pods that have tolerations for the tained nodes
     - NoExecute - kubernetes will evict the running pods from the nodes if pods don't have toleration for the tainted nodes.
        
Q-65 what is static pod
     
     - static pods are created and managed by kubelet daemon on a 
       specific node without API server and scheduler
     - If the static pod crashes, kubelet restarts them 
     - Control plane is not involved in lifecycle of static them  
     
Q-66 what is Daemonset

     - A daemonset ensures that all (or some) Nodes run a copy of pod.
     - As nodes are added to the cluster, pods are addes to them
     - As nodes are plane is not involved in lifecycle of static pod 


Q-67 how to deploy application using helm
     - we can deploy application using 
       "helm install <chart-name> <chart-location>"

Q-68 how to update application usibg helm
     - we ca use command
       "helm upgraade <chart name> <chart-location>"

Q-69 how to rollback our application using helm
     - we can use command
       "helm rollback <chart-name> <verion number>
       
Q-70 how to create helm charts

Q-71 how to deploy application using helm replication
     
Q-72 what is helm registory
     - helm registory is helm's remote registry from where we can upload our helm cahrts 
       and other peoples around the

     - at a high level, a chart repository is a location where packaged charts can be stored and 
       shred   

Q-73 what is use of coreDNS in kubernetes
Q-74 why we need kubernetes
--------------------------
     
#NOTES

  set update stratagies to Rolling Updates
  YAML : yet another markup language
  base64 encripted
  Which version of kubernetes you are using
  v1.23
   
  Drain  ( kubectl drain node <node name> )
    - corden
    - eviction

---------------------------

difference between san and nas

Q. 

